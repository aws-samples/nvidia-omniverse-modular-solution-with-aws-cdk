################################################################################
################################################################################
################################################################################
#
# This Compose file will bring up the Omniverse Enterprise Nucleus
# stack, consisting of:
#
# * API Service
# * LFT (Large File Transfer) Service
# * Web UI
# * Discovery Service
# * Authentication Service 
# * Thumbnail Service
# * Search (former Indexing) Service
# * Tagging Service
# * Some additional utility sidecars
#
# Services listening on a socket will bind to 
# ports configured in *_PORT variables in 
# nucleus-stack.env file.
#
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
# It is of utmost importance to configure your nucleus-stack.env. 
# Review it in FULL and configure it's values as desired. Default 
# nucleus-stack.env will not render an operational deployment. 
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 

version: "3.7"

services: 

  ############################
  # Main (Core) Nucleus Stack
  ############################

  nucleus-api:
    image: ${REGISTRY}/nucleus-api:${CORE_VERSION}
    restart: always
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"
      SECURITY_REVIEWED: "${SECURITY_REVIEWED:?SECURITY_REVIEWED must be set to 1}"

      OMNI_INSTANCE: ${INSTANCE_NAME}

      OMNI_LFT_ADDRESS: http://*:${LFT_PORT}
      OMNI_LFT_THRESHOLD: 262144

      OMNI_CONTENT_RAM_SZ: 6

      # Note: adjust this if `omni.server.app`
      # is occupying a lot of CPU in one or more threads
      # (use `htop`, `top`, or similar to investigate first)
      OMNI_NUCLEUS_CORE_THREADS_COUNT: 4

      OMNI_LAUNCHER_PROMETHEUS_PORT: 9500

      OMNI_MASTER_PASSWORD: ${MASTER_PASSWORD}
      OMNI_ENABLE_TEST_USER: 0
      OMNI_AUTH_JWT_PUBKEY: /omni/secrets/jwt_pubkey.pub

      OMNI_S3_RESOLVER_CACHE: http://nucleus-resolver-cache:8891

      OMNI_CRASHENABLEUPLOADING: 0
      OMNI_CRASHREPORTERENABLED: 0
      OMNI_ENABLE_MOUNT_RESOLVER_LOGGING: 0

      OMNI_VERSIONING: ${ENABLE_VERSIONING}
      OMNI_OO_MODE: 0
      
      OMNI_DEFAULT_S3_PROXY_CACHE: http://nucleus-resolver-cache:8891

       
      OMNI_NUCLEUS_DISCOVERY_HOST: nucleus-discovery
      OMNI_NUCLEUS_DISCOVERY_SERVICE_DEPLOYMENTS: |
        reg: 
          - name: external
            transport:
              type: connlib
              params: 
                url: ws://${SERVER_IP_OR_HOST}:${API_PORT}

          - name: internal 
            transport: 
              type: connlib
              params: 
                url: ws://${SERVER_IP_OR_HOST}:${API_PORT}

      OMNI_NUCLEUS_DISCOVERY_TOKEN_FILE: /omni/secrets/discovery_token
      OMNI_NUCLEUS_SERVICE_AUTH_DEPLOYMENT_LOOKUP: internal

    volumes:
      - ${DATA_ROOT}/data:/omni/data
      - ${DATA_ROOT}/log/api:/omni/log
      - ${DATA_ROOT}/scratch/meta-dump:/omni/scratch-meta-dump

      - type: bind 
        source: ${AUTH_ROOT_OF_TRUST_PUB}
        target: /omni/secrets/jwt_pubkey.pub
        read_only: true

      - type: bind 
        source: ${DISCOVERY_REGISTRATION_TOKEN}
        target: /omni/secrets/discovery_token
        read_only: true

      - type: bind 
        source: ${LFT_SALT}
        target: /omni/secrets/lft_salt
        read_only: true

    ports:
      - published: ${API_PORT}
        target: 3009 
    # Uncomment this endpoint (port) if making backups with `dump_backups`
    # is desired
    # Additionally, enable `nucleus-meta-dumper` service below.
    # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    # !!! EXPOSING THIS ENDPOINT TO ANYTHING BUT TRUSTED HOSTS WILL LEAD !!
    # !!! TO SECURITY BEING COMPROMISED                                  !!
    # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    #  - published: ${SERVICE_API_PORT}
    #    target: 3006
           
  nucleus-lft:
    image: ${REGISTRY}/nucleus-lft:${CORE_VERSION}
    restart: always
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"
      OMNI_LFT_AUTH_PUBLIC_KEY: /omni/secrets/jwt_pubkey.pub
      OMNI_LFT_COMPRESSION: ${LFT_COMPRESSION}
    volumes:
      - ${DATA_ROOT}/log/lft:/omni/log
      - ${DATA_ROOT}/data:/omni/data

      - type: bind 
        source: ${AUTH_ROOT_OF_TRUST_PUB}
        target:  /omni/secrets/jwt_pubkey.pub
        read_only: true

      - type: bind 
        source: ${LFT_SALT}
        target: /omni/secrets/lft_salt
        read_only: true

  nucleus-lft-lb:
    image: ${REGISTRY}/nucleus-lft-lb:${CORE_VERSION}

    restart: always
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"
      NGINX_WORKER_PROCESSES: auto
      NGINX_WORKER_CONNECTIONS: 1024
      NGINX_MAX_BODY_SIZE: 10m
      OMNI_LFT_RR_HOSTNAME: nucleus-lft
      OMNI_LFT_PORT: 3030

    ports:
      - published: ${LFT_PORT}
        target: 3030
         

  nucleus-log-processor:
    image: ${REGISTRY}/nucleus-log-processor:${CORE_VERSION}
    restart: always
    environment: 
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"

      OMNI_INSTANCE: ${INSTANCE_NAME}
      OMNI_PROCESS_LFT_LOGS: 1
    volumes:
      - ${DATA_ROOT}/log:/omni/log

  nucleus-resolver-cache:
    image: ${REGISTRY}/nucleus-resolver-cache:${CORE_VERSION}
    restart: always
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"

      OMNI_CACHE_TYPE: resolver-cache

      OMNI_CACHE_YAML_CONFIG: |
        enable_frontend: false  
        frontend_root: /omni/omnicache_browser
        log_path: /omni/log
        cache_root: /omni/data
        metrics_enabled: true
        listen_address: "0.0.0.0"
        control_address: "0.0.0.0"
        metrics_address: "0.0.0.0"
        client_compression: false
    volumes:
       - ${DATA_ROOT}/resolver-cache:/omni/data

  utl-monpx:
    image: ${REGISTRY}/utl-monpx:${CORE_VERSION}
    restart: always
    environment:
       ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"
       OMNI_MONPX_SCRAPE_URLS: http://nucleus-api:9500/metrics;http://nucleus-api:3010/metrics;http://nucleus-log-processor:9500/metrics
       OMNI_MONPX_ALLOWED_METRIC_PREFIXES: omni:nginx:redis:exposer:otcollector:otelcol
       OMNI_DS_BLACKLIST_PATH: /omni/data/PathBlackList.json
    volumes:
      - ${DATA_ROOT}/data:/omni/data
    ports:
      - published: ${METRICS_PORT}
        target: 8080

  # Uncomment this service if making backups with `dump_backups` is desired
  # Additionally, enable Service API endpoint of `nucleus-api` service.
  # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  # !!! EXPOSING THIS SERVICE'S ENDPOINT TO ANYTHING BUT TRUSTED HOSTS !!
  # !!! WILL LEAD SECURITY BEING COMPROMISED                           !!
  # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  
#  nucleus-meta-dumper:
#    image: ${REGISTRY}/nucleus-meta-dumper:${CORE_VERSION}
#    restart: always
#
#    environment:
#      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"
#
#      OMNI_SERVER: nucleus-api
#
#      OMNI_SERVICE_PORT: 3006
#
#      OMNI_META_DUMPER_AUTH_ENABLED: basic
#      OMNI_META_DUMPER_USER: omniverse
#      OMNI_META_DUMPER_PASSWORD: ${MASTER_PASSWORD}
#
#    volumes:
#      - ${DATA_ROOT}/scratch/meta-dump:/omni/scratch-meta-dump
#
#    ports:
#      - published: ${META_DUMP_PORT}
#        target: 5000

  #####################
  # Discovery Service 
  #####################

  nucleus-discovery:

    image: ${REGISTRY}/nucleus-discovery:${DISCOVERY_VERSION}
    restart: always
    tty: true

    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"

      CANONICAL_NAME: ${SERVER_IP_OR_HOST}

      SERVICE_TOKEN: /omni/secrets/SERVICE_TOKEN

      SERVICE_DEPLOYMENTS: | 
        reg:
          - name: external
            transport:
              type: sows
              params:
                host: ${SERVER_IP_OR_HOST}
                port: ${DISCOVERY_PORT}

          - name: internal
            transport:
              type: sows
              params:
                  host: ${SERVER_IP_OR_HOST}
                  port: 3333

    volumes:
      - type: bind
        source:  ${DISCOVERY_REGISTRATION_TOKEN}
        target: /omni/secrets/SERVICE_TOKEN
        read_only: true

    ports:
      - published: ${DISCOVERY_PORT}
        target: 3333

  #########################
  # Authentication Service
  #########################

  nucleus-auth:
    image: ${REGISTRY}/nucleus-auth:${AUTH_VERSION}
    restart: always
    tty: true

    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"

      SERVICE_ACCESS_TOKEN_DURATION: 30
      SERVICE_REFRESH_TOKEN_DURATION: 10080

      SERVICE_PRIVATE_KEY: /omni/secrets/SERVICE_PRIVATE_KEY
      SERVICE_PUBLIC_KEY: /omni/secrets/SERVICE_PUBLIC_KEY

      SERVICE_PRIVATE_KEY_LONG_TERM_TOKENS: /omni/secrets/SERVICE_PRIVATE_KEY_LONG_TERM_TOKENS
      SERVICE_PUBLIC_KEY_LONG_TERM_TOKENS: /omni/secrets/SERVICE_PUBLIC_KEY_LONG_TERM_TOKENS

      SERVICE_SALT: /omni/secrets/SERVICE_SALT

      SERVICE_DISCOVERY_URL: ws://nucleus-discovery:3333
      SERVICE_DISCOVERY_TOKEN: /omni/secrets/SERVICE_DISCOVERY_TOKEN

      SERVICE_LOG_LEVEL: DEBUG

      CREDENTIAL_AUTO_REGISTER: "False"

      CREDENTIAL_UI_VISIBLE: ${CREDENTIAL_UI_VISIBLE}

      SERVICE_API_TOKENS_ENABLED: 0

      # SSO options 
      USE_SAML_SSO: ${USE_SAML_SSO}
      SAML_SSO_REDIRECT: ${SAML_LOGIN_URL}
      SAML_SSO_METADATA_FILE: /omni/secrets/SAML_SSO_META
      SAML_SSO_PUBLIC_NAME: ${SAML_SSO_NAME}
      SAML_SSO_ISSUER: ${SSO_GW_ADDRESS}

      # Additional options
      SAML_SSO_ACS_URL: ${SAML_SSO_ACS_URL}
      SAML_SSO_DESTINATION: ${SAML_SSO_DESTINATION}
      SAML_SSO_NAMEID_FORMAT: ${SAML_SSO_NAMEID_FORMAT}
      STATIC_MAX_HEADER_SIZE: ${SAML_SSO_MAX_BOUNCEBACK_URL_LENGTH}
      
      # Uncomment (and set to valid URL) if custom SSO
      # icon is desired
      # SAML_SSO_IMAGE: ${SAML_SSO_IMAGE}

      PUBLIC_URL: http://${SERVER_IP_OR_HOST}:${AUTH_LOGIN_FORM_PORT}/

      SERVICE_DEPLOYMENTS: | 
        reg:

          - name: external
            transport:
              type: sows
              params:
                host: ${SERVER_IP_OR_HOST}
                port: ${AUTH_PORT}
            meta:
              login_url: http://${SERVER_IP_OR_HOST}:${AUTH_LOGIN_FORM_PORT}/

          - name: internal
            transport:
              type: sows
              params:
                host: ${SERVER_IP_OR_HOST}
                port: ${AUTH_PORT}

      CREDENTIAL_USERS: |
        [
          {
            "username": "omniverse",
            "password": "${MASTER_PASSWORD}",
            "profile": { "admin": true }
          },
          {
            "username": "tags_service",
            "password": "${SERVICE_PASSWORD}",
            "profile": { "admin": true, "readonly": true }
          },
          {
            "username": "thumbnails_service",
            "password": "${SERVICE_PASSWORD}",
            "profile": { "admin": true, "readonly": true }
          },
          {
            "username": "search_service",
            "password": "${SERVICE_PASSWORD}",
            "profile": { "admin": true, "readonly": true }
          }
        ]
    volumes:
      - ${DATA_ROOT}/local-accounts-db:/omni/data

      - type: bind
        source: ${AUTH_ROOT_OF_TRUST_PRI}
        target: /omni/secrets/SERVICE_PRIVATE_KEY
        read_only: true

      - type: bind 
        source: ${AUTH_ROOT_OF_TRUST_PUB}
        target: /omni/secrets/SERVICE_PUBLIC_KEY
        read_only: true 

      - type: bind
        source: ${AUTH_ROOT_OF_TRUST_LONG_TERM_PRI}
        target: /omni/secrets/SERVICE_PRIVATE_KEY_LONG_TERM_TOKENS
        read_only: true

      - type: bind 
        source: ${AUTH_ROOT_OF_TRUST_LONG_TERM_PUB}
        target: /omni/secrets/SERVICE_PUBLIC_KEY_LONG_TERM_TOKENS
        read_only: true 

      - type: bind 
        source: ${PWD_SALT}
        target: /omni/secrets/SERVICE_SALT
        read_only: true

      - type: bind 
        source: ${DISCOVERY_REGISTRATION_TOKEN}
        target: /omni/secrets/SERVICE_DISCOVERY_TOKEN
        read_only: true

      - type: bind 
        source: ${FEDERATION_META_FILE}
        target: /omni/secrets/SAML_SSO_META
        read_only: true

    ports:
      - published: ${AUTH_PORT}
        target: 3100

      - published: ${AUTH_LOGIN_FORM_PORT}
        target: 3180

  #####################
  # Navigator
  #####################
  
  nucleus-navigator:
    image: ${REGISTRY}/nucleus-navigator:${NAV3_VERSION}

    restart: always

    tty: true
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"

      PUBLIC_URL: http://${SERVER_IP_OR_HOST}:${WEB_PORT}/
      
      SSL: 0

      SETTINGS_JSON: |
        {
          "etag": "a66b3b6fc8bc5aa68b06f4eba0cb8c8e",
          "features": { "soft-delete": 0 },
          "storages": {
            "items": [
              {
                "name": "${SERVER_IP_OR_HOST}",
                "provider": { "type": "nucleus" }
              }
            ],
            "readOnly": true
          }
        }

    ports:
      - published: ${WEB_PORT}
        target: 80
 
  #####################
  # Additional Services
  #####################

  nucleus-search:
    image: ${REGISTRY}/nucleus-search:${SEARCH_VERSION}
    restart: always
    tty: true
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"

      SERVICE_BACKEND_USER: search_service
      SERVICE_BACKEND_PASSWORD: ${SERVICE_PASSWORD}

      SERVICE_HOST: 0.0.0.0
      SERVICE_PORT: 3400

      SERVICE_DEPLOYMENTS_LOOKUP: internal

      SERVICE_DISCOVERY_TOKEN: /omni/secrets/SERVICE_DISCOVERY_TOKEN
      SERVICE_DISCOVERY_URL: ws://nucleus-discovery:3333

      SERVICE_AUTH_PUBLIC_KEY: /omni/secrets/SERVICE_AUTH_PUBLIC_KEY

      SERVICE_DEPLOYMENTS: | 
        reg:
          - name: external
            transport:
              type: sows
              params:
                host: ${SERVER_IP_OR_HOST}
                port: ${SEARCH_PORT}

          - name: internal
            transport:
              type: sows
              params:
                  host: ${SERVER_IP_OR_HOST}
                  port: ${SEARCH_PORT}

    volumes:
      - type: bind 
        source: ${DISCOVERY_REGISTRATION_TOKEN}
        target: /omni/secrets/SERVICE_DISCOVERY_TOKEN
        read_only: true

      - type: bind 
        source: ${AUTH_ROOT_OF_TRUST_PUB}
        target: /omni/secrets/SERVICE_AUTH_PUBLIC_KEY
        read_only: true 

    ports:
      - published: ${SEARCH_PORT}
        target:  3400

  nucleus-thumbnails: 
    image: ${REGISTRY}/nucleus-thumbnails:${THUMBNAILING_VERSION}
    restart: always

    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"

      SERVICE_DISCOVERY_URL: ws://nucleus-discovery:3333
      SERVICE_DEPLOYMENTS_LOOKUP: internal

      OV_USERNAME: thumbnails_service
      OV_PASSWORD: ${SERVICE_PASSWORD}

      OV_MEMORY_RESERVE: 256
      OV_MEMORY_LIMIT: 4096
      OV_CPU_RESERVE: 0.25
      OV_CPU_LIMIT: 1

      OV_SERVICE_BIND_HOST: 0.0.0.0

      OV_HOST_NAME: 

      OV_EXCLUDE_PATHS: "['/@', '/.tags/', '/.system/']"

      OV_INSTANCE_NAME: ${INSTANCE_NAME}
      OV_LOGFILE: /omni/log/create_thumbnails.log

    volumes:

        - ${DATA_ROOT}/log/thumbnails:/omni/log

  nucleus-tagging:
    image: ${REGISTRY}/nucleus-tagging:${TAGGING_VERSION}
    restart: always
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA:?ACCEPT_EULA must be set to 1}"

      OV_HOST_NAME: ''
      OV_SERVICE_BIND_HOST: 0.0.0.0
      OV_SERVICE_BIND_PORT: 3020

      OV_INSTANCE_NAME: ${INSTANCE_NAME}

      OV_USERNAME: tags_service
      OV_PASSWORD: ${SERVICE_PASSWORD}

      OV_MEMORY_LIMIT: 2048
      OV_MEMORY_RESERVE: 256
      OV_CPU_LIMIT: 1
      OV_CPU_RESERVE: 0.25
      OV_REGENERATE_DB: 0

      OV_UPDATE_TAG_FORMAT_1_0: 0
      OV_STACK_PROMETHEUS_PORT: 2000

      OV_LOGFILE: /omni/log/tagging_service.log
      OV_LOGGING_LEVEL: INFO

      OV_STORAGE_BACKEND: sqlite_backend
      OV_STORAGE_BACKEND_CONFIG: '{"defrag_interval": 86400, "storage_location": "/omni/data/Tagging.db"}'
      SQLITE_TMPDIR: /omni/temp

      SERVICE_AUTH_PUBLIC_KEY: /omni/secrets/SERVICE_AUTH_PUBLIC_KEY

      WS_MAX_HTTP_LINE: 20000

      SERVICE_DISCOVERY_URL: ws://nucleus-discovery:3333
      SERVICE_DEPLOYMENTS_LOOKUP: internal
      OV_SERVICE_DISCOVERY_TOKEN_FILE: /omni/secrets/SERVICE_DISCOVERY_TOKEN

      OV_SERVICE_DEPLOYMENTS: |
        reg:
          - name: external
            transport:
              type: sows
              params:
                host: ${SERVER_IP_OR_HOST}
                port: ${TAGGING_PORT}
          - name: internal
            transport:
              params:
                host: ${SERVER_IP_OR_HOST}
                port: ${TAGGING_PORT}
              type: sows
    volumes:
      - ${DATA_ROOT}/tags-db:/omni/data
      - ${DATA_ROOT}/log/tagging:/omni/log
      - ${DATA_ROOT}/tmp/tagging:/omni/temp

      - type: bind
        source: ${DISCOVERY_REGISTRATION_TOKEN}
        target: /omni/secrets/SERVICE_DISCOVERY_TOKEN
        read_only: true

      - type: bind 
        source: ${AUTH_ROOT_OF_TRUST_PUB}
        target: /omni/secrets/SERVICE_AUTH_PUBLIC_KEY
        read_only: true 
    ports:
      - published:  ${TAGGING_PORT}
        target: 3020

  # A sidecar to rotate tagging service's logs
  tagging-logrotate:
    image: graffic/logrotate:1.4
    restart: always
    environment:
      LOGROTATE_PATTERN: "/omni/log/*.log"
      LOGROTATE_OPTIONS: |-
        size 100M
        compress
    volumes:
       - ${DATA_ROOT}/log/tagging:/omni/log

networks: 
  default: 
    ipam:
      config: 
        - subnet: "${CONTAINER_SUBNET}"